name: Deploy Next.js site to Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  APP_NAME : 'saasnextjs_app'

jobs:
    
  # Build job
  Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build Project
        run: npm run build     

      - name: Upload build artifact 
        uses: actions/upload-artifact@v3
        with:
          name: nextjs-build
          path: .
        
  Push_To_DockerHub:
    needs: Build
    runs-on: ubuntu-latest
    
    env:
      DOCKER_IMAGE_NAME : "nextjsapp"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

  Push_To_ACR:
    needs: Push_To_DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Start Push to ACR
        run : echo "==================================================="
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
         fetch-depth: 0



#  Deploy_To_ACR:
#    name: 'Build and Push to ACR'
#    runs-on: ubuntu-latest
#        
#    defaults:
#      run:
#        shell: bash
#        
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#         fetch-depth: 0
#        
#      - name: Docker Login
#        uses: azure/docker-login@v1
#        with:
#          login-server: ${{ secrets.ACR_URL }}
#          username: ${{ secrets.ACR_USERNAME }}
#          password: ${{ secrets.ACR_PASSWORD }}
#        
#      - run: |
#          docker build -t nodejs-app .
#          docker tag nodejs-app ${{ secrets.ACR_URL }}/nodejs-app:${{ github.sha }}
#          docker push ${{ secrets.ACR_URL }}/nodejs-app:${{ github.sha }}

#  Deploy_To_AKS:
#    name: 'Build and Push to ACR'
#    runs-on: ubuntu-latest
#        
#    defaults:
#      run:
#        shell: bash
#        
#    steps:
#      - name: deploy manifist file content
#        uses: Azure/k8s-deploy@v5
#        with:
#           resource-group: yourResourceGroup
#           name: yourClusterName
#           action: deploy
#           strategy: basic
#      
#           private-cluster: true
#           manifests: |
#              manifests/azure-vote-backend-deployment.yaml
#              manifests/azure-vote-backend-service.yaml
#              manifests/azure-vote-frontend-deployment.yaml
#              manifests/azure-vote-frontend-service.yaml
#           images: |
#              registry.azurecr.io/containername